// <auto-generated />
using System;
using Challenge_Backend_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Challenge_Backend_API.Migrations
{
    [DbContext(typeof(MovieContext))]
    partial class MovieContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Challenge_Backend_API.Entities.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genero");
                });

            modelBuilder.Entity("Challenge_Backend_API.Entities.Pelicula_o_serie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Calificación")
                        .HasColumnType("real");

                    b.Property<float>("FechaCreación")
                        .HasColumnType("real");

                    b.Property<int?>("GeneroId")
                        .HasColumnType("int");

                    b.Property<string>("Historia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonajeId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GeneroId");

                    b.HasIndex("PersonajeId");

                    b.ToTable("Pelicula_o_serie");
                });

            modelBuilder.Entity("Challenge_Backend_API.Entities.Personaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Edad")
                        .HasColumnType("real");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Personaje");
                });

            modelBuilder.Entity("Challenge_Backend_API.Entities.Pelicula_o_serie", b =>
                {
                    b.HasOne("Challenge_Backend_API.Entities.Genero", null)
                        .WithMany("Pelicula_o_Serie")
                        .HasForeignKey("GeneroId");

                    b.HasOne("Challenge_Backend_API.Entities.Personaje", "Personaje")
                        .WithMany("Pelicula_O_Serie")
                        .HasForeignKey("PersonajeId");

                    b.Navigation("Personaje");
                });

            modelBuilder.Entity("Challenge_Backend_API.Entities.Genero", b =>
                {
                    b.Navigation("Pelicula_o_Serie");
                });

            modelBuilder.Entity("Challenge_Backend_API.Entities.Personaje", b =>
                {
                    b.Navigation("Pelicula_O_Serie");
                });
#pragma warning restore 612, 618
        }
    }
}
